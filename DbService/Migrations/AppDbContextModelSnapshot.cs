// <auto-generated />
using System;
using DbService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbService.DbModels.DbSearchProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Base64Image")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.ToTable("SearchProviders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5e4832e6-cfed-4a51-8a4e-60892761e06b"),
                            Base64Image = "base64:eee",
                            BaseUrl = "https://www.google.co.uk/search?num=100&q=\\{0\\}",
                            Created = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5157),
                            Name = "Google",
                            Updated = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5210)
                        },
                        new
                        {
                            Id = new Guid("216a9c6a-e257-4a02-a05d-28457ee21a53"),
                            Base64Image = "base64:eee",
                            BaseUrl = "https://www.dogpile.com/serp?q=\\{0\\}",
                            Created = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5241),
                            Name = "Dogpile",
                            Updated = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5242)
                        },
                        new
                        {
                            Id = new Guid("d3416981-bd62-4d49-8f0e-5355e86d82f1"),
                            Base64Image = "base64:eee",
                            BaseUrl = "https://www.google.co.uk/search?num=100&q=\\{0\\}",
                            Created = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5257),
                            Name = "Google (Alt)",
                            Updated = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5258)
                        });
                });

            modelBuilder.Entity("DbService.DbModels.DbUserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7bc7a2b6-1fcb-43e5-a27c-565b00146e7b"),
                            Created = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5282),
                            Name = "Paul",
                            Updated = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5283)
                        },
                        new
                        {
                            Id = new Guid("088da3f6-8714-4f34-a078-87711c6825c2"),
                            Created = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5299),
                            Name = "Sara",
                            Updated = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5300)
                        },
                        new
                        {
                            Id = new Guid("4dbb0b52-557f-40d3-bd8d-79b52463e6aa"),
                            Created = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5314),
                            Name = "Colin",
                            Updated = new DateTime(2024, 3, 19, 10, 40, 54, 588, DateTimeKind.Local).AddTicks(5315)
                        });
                });

            modelBuilder.Entity("DbService.DbModels.DbUserSearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Positions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SearchTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("SearchTerms");

                    b.ToTable("UserSearches");
                });

            modelBuilder.Entity("DbService.DbModels.DbUserSearch", b =>
                {
                    b.HasOne("DbService.DbModels.DbUserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DbService.DbModels.DbSearchProvider", "SearchProvider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SearchProvider");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
