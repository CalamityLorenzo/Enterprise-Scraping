// <auto-generated />
using System;
using DbService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240319120830_seed2")]
    partial class seed2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbService.DbModels.DbSearchProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Base64Image")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.ToTable("SearchProviders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8594551-2646-4472-a0da-ea6504c287a6"),
                            Base64Image = "base64:eee",
                            BaseUrl = "https://www.google.co.uk/search?num=100&q={{0}}",
                            Created = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(7918),
                            Name = "Google",
                            Updated = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(7974)
                        },
                        new
                        {
                            Id = new Guid("bd9c0848-3aa8-4b04-ba68-68dd984805fc"),
                            Base64Image = "base64:eee",
                            BaseUrl = "https://www.dogpile.com/serp?q={{0}}",
                            Created = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(8008),
                            Name = "Dogpile",
                            Updated = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(8010)
                        },
                        new
                        {
                            Id = new Guid("7ca1526f-4410-4fee-8ddf-457a480003de"),
                            Base64Image = "base64:eee",
                            BaseUrl = "https://www.google.co.uk/search?num=100&q={{0}}",
                            Created = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(8025),
                            Name = "Google (Alt)",
                            Updated = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(8026)
                        });
                });

            modelBuilder.Entity("DbService.DbModels.DbUserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3700b53a-c1e9-4303-b9b9-3b34e792eda5"),
                            Created = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(8044),
                            Name = "Paul",
                            Updated = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(8045)
                        },
                        new
                        {
                            Id = new Guid("5dd241c4-2d10-4ce3-810e-11e014c55fa0"),
                            Created = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(8063),
                            Name = "Sara",
                            Updated = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(8064)
                        },
                        new
                        {
                            Id = new Guid("db4644d4-ace1-4088-af61-3f369ddb72ca"),
                            Created = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(8079),
                            Name = "Colin",
                            Updated = new DateTime(2024, 3, 19, 12, 8, 30, 145, DateTimeKind.Local).AddTicks(8080)
                        });
                });

            modelBuilder.Entity("DbService.DbModels.DbUserSearch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Positions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SearchTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("SearchTerms");

                    b.ToTable("UserSearches");
                });

            modelBuilder.Entity("DbService.DbModels.DbUserSearch", b =>
                {
                    b.HasOne("DbService.DbModels.DbUserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DbService.DbModels.DbSearchProvider", "SearchProvider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SearchProvider");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
